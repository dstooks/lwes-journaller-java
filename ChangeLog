* Thu Nov  8 12:18:22 PST 2012 Frank Maritato <frank.maritato@openx.com> 1.1.1
* Mostly changed file name format and rotation. Filename command line switch
will now be the filename while writing, i.e. all_events.log.seq. When the file
is rotated, it will become all_events.log.yyyyMMddHHmm.yyyyMMddHHmm.seq, where
the first time stamp is the start time and the second is the end time.
* Unicast support added. Command line switches changed to be more generic.
* Added the number of dropped events to the rotate event.

=== 1.0.2 ===
* Check if the queue has capacity before trying to add to it to avoid IllegalStateException.
* Rotate the file differently to minimize the amount of time blocked in synchronize.
* Expose DropCount in JMX to keep track of how many events were dropped due to full queue.
* Added a "DailyMaxRollingFileAppender" which rotates the log4j file daily and also
keeps a maximum number of backup files.

=== 1.0.1 ===
* Exposed shutdown method in JournallerMBean and changed the stop scripts to call that.
* Deleted the Rotate class for jmx in favor of the JMXUtil class that does both shutdown and rotate. Updated
rotate shell script to reflect this.
* Added a 5 second timeout to the Datagram socket.
* Change the FileSystem passed into the SequenceFileWriter to use the raw local to avoid creation
of the crc files.
* Updated to cdh3u0 of hadoop-core for sequence file output.

=== Version 1.0.0 ===
* JMX added for monitoring.
* Refactored the Event Handlers.
* Added SequenceFileEventHandler to output events to sequence files for use
with hadoop. Also added this support to the dejournaller.
* Dejournaller provided as an executable jar.
* Journaller will now emit a couple of events that can be used to monitor it's health.
** Journaller::Health -- emitted when a message is received and enough time has elapsed since
the last one. Contains the timestamp, the number of events emitted and the interval at which
to expect these messages.
** Journaller::Rotate -- emitted when the journaller rotates the file it is using to archive
events. Contains the timestamp, file name, and the number of events in the file.
* Added a command line option to specify the site id to use.

=== Version 0.0.6 ===
* Internal queue changed so the events are written to file in the order in which they were
received. (This was actually in lwes-java)
* Allow pass in of a filename pattern so one can take advantage of date and hostname elements.
